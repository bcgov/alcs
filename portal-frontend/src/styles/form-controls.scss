@use 'functions' as *;
@use 'colors';

// FORM FIELDS
.mat-form-field-infix {
  border-top: 0;
}

.mat-form-field-appearance-outline .mat-form-field-outline {
  top: 0 !important;
  color: rgba(0, 0, 0, 0.42);
}

.mat-form-field {
  margin-top: rem(8);
}

.mat-form-field-wrapper {
  padding-bottom: 0;
}

.mat-mdc-form-field-subscript-wrapper {
  height: 0;
}

.mat-mdc-form-field-infix {
  min-height: unset;
}

//This prevents the bottom of the text from being cut off
.mat-mdc-form-field .mat-form-field-label-wrapper label {
  line-height: 1.2;
}

.mat-mdc-form-field .mat-mdc-form-field-infix input {
  line-height: 1.2;
}

.mat-mdc-dialog-container .mdc-dialog__content {
  color: inherit !important;
  line-height: inherit !important;
  font-size: inherit !important;
  font-weight: inherit !important;
  letter-spacing: inherit !important;
}

.mat-form-field-appearance-outline .mat-form-field-infix {
  padding: rem(6) 0;

  @media screen and (min-width: $tabletBreakpoint) {
    & {
      padding: rem(14) 0;
    }
  }
}

input.mat-input-element {
  margin-top: 0;
}

input.mat-input-element::placeholder {
  color: colors.$grey-dark;
  opacity: 1;
}

input.mat-input-element:disabled::placeholder {
  color: colors.$grey;
}

form {
  label {
    font-weight: 700;
    font-size: rem(13) !important;

    &:has(+ .mat-form-field-disabled) {
      color: colors.$grey;
    }

    &:has(+ div ~ mat-form-field.mat-form-field-disabled) {
      color: colors.$grey;
    }

    &:has(+ mat-button-toggle-group mat-button-toggle.mat-button-toggle-disabled) {
      color: colors.$grey;
    }

    &:has(+ div ~ mat-button-toggle-group mat-button-toggle.mat-button-toggle-disabled) {
      color: colors.$grey;
    }

    @media screen and (min-width: $tabletBreakpoint) {
      & {
        font-size: rem(16) !important;
      }
    }
  }

  .form-row {
    margin-top: rem(16);
    display: grid;
    grid-template-columns: 1fr;
    grid-column-gap: rem(30);
    grid-row-gap: rem(8);

    @media screen and (min-width: $tabletBreakpoint) {
      grid-row-gap: rem(24);
    }

    @media screen and (min-width: $desktopBreakpoint) {
      & {
        grid-template-columns: 1fr 1fr;
      }

      .full-row {
        grid-column: 1/3;
      }
    }

    .mat-form-field,
    .mat-mdc-form-field {
      margin-top: rem(5);
      width: 100%;

      .mat-button-toggle {
        width: 100%;
      }
    }
  }

  .input {
    margin-top: rem(5);
    width: 100%;

    .mat-button-toggle {
      width: 100%;
    }
  }
}

.mdc-list-item__primary-text {
  width: 100%;
}

.mdc-text-field--invalid {
  // Default error border
  .mdc-notched-outline__leading,
  .mdc-notched-outline__notch {
    border-bottom-width: 3px !important;
    border-left-width: 3px !important;
    border-top-width: 3px !important;
  }

  .mdc-notched-outline__trailing {
    border-bottom-width: 3px !important;
    border-right-width: 3px !important;
    border-top-width: 3px !important;
  }

  // Focus error border to match default mat behaviour
  .mdc-notched-outline--notched {
    .mdc-notched-outline__leading,
    .mdc-notched-outline__notch {
      border-bottom-width: 2px !important;
      border-left-width: 2px !important;
      border-top-width: 2px !important;
    }

    .mdc-notched-outline__trailing {
      border-bottom-width: 2px !important;
      border-right-width: 2px !important;
      border-top-width: 2px !important;
    }
  }
}
