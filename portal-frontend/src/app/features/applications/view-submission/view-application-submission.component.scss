@use '../../../../styles/functions' as *;
@use '../../../../styles/colors';

.navigation {
  ::ng-deep .mdc-tab__text-label {
    font-weight: bold;
  }
}

.content {
  margin: rem(24) 0;
}

:host::ng-deep {
  .header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: rem(24);
    flex-direction: column;

    @media screen and (min-width: $tabletBreakpoint) {
      flex-direction: row;
    }

    h3 {
      margin-top: rem(8) !important;
    }

    .btns-wrapper {
      display: flex;
      flex-direction: column-reverse;
      width: 100%;

      button {
        margin-top: rem(16) !important;
      }

      @media screen and (min-width: $tabletBreakpoint) {
        display: inline-block;
        width: unset;

        button {
          margin-right: rem(16) !important;
          margin-top: rem(8) !important;
        }

        button:last-child {
          margin-right: 0 !important;
        }
      }
    }
  }

  .comment-container {
    align-items: flex-start;
    background-color: rgba(colors.$accent-color-light, 0.5);
    border-radius: rem(4);
    display: flex;
    flex-direction: column;
    margin-bottom: rem(24);
    padding: rem(16);

    div {
      margin-bottom: rem(4);
    }
  }
}

.banner {
  background-color: colors.$secondary-color;
  width: 100vw;
  color: #fff;
  padding: rem(16) rem(24);
  margin-bottom: rem(16);
  position: relative;
  left: 50%;
  transform: translateX(-50%);

  @media screen and (min-width: $tabletBreakpoint) {
    padding: rem(12) rem(36) !important;
  }

  @media screen and (min-width: $desktopBreakpoint) {
    padding: rem(18) rem(80) !important;
  }

  .banner-status {
    margin: rem(16) 0;
    display: grid;
    grid-template-columns: 1fr;

    div {
      margin-top: rem(16);
    }

    @media screen and (min-width: $tabletBreakpoint) {
      grid-template-columns: 1fr 1fr;
      margin-bottom: 0;
    }
  }
}

.buttons {
  display: flex;
  flex-direction: column-reverse;
  justify-content: center;

  button {
    width: 100%;
    margin-bottom: rem(16) !important;
  }

  @media screen and (min-width: $tabletBreakpoint) {
    flex-direction: row;

    div {
      margin-right: rem(16);
    }

    div:last-child {
      margin-right: 0 !important;
    }
  }
}

.action-bar {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  width: 100%;
  background-color: colors.$primary-color-light;
  display: flex;
  justify-content: center;
  align-items: center;
  height: rem(56);
  z-index: 2;

  button {
    width: 100%;
    height: 100%;
    text-align: right !important;
    display: flex;
    justify-content: flex-end;
    padding: rem(8) rem(24);

    @media screen and (min-width: $tabletBreakpoint) {
      padding: rem(12) rem(36);
    }

    @media screen and (min-width: $desktopBreakpoint) {
      padding: rem(18) rem(80);
    }
  }

  div {
    display: flex;
    align-items: center;
    justify-content: center;

    .mat-icon {
      margin-left: rem(6);
    }
  }
}

.no-comment {
  color: colors.$grey-dark;
  font-style: italic;
}

.tractor {
  width: 100%;
  margin-bottom: rem(16);
}

section {
  margin-bottom: rem(24);
}

.document {
  margin-bottom: rem(8);
}

.continue-button-container {
  position: sticky;
  bottom: 0;
  margin-top: rem(40);
  background-color: colors.$white;
  display: flex;
  padding: rem(16) 0;
  flex-direction: column-reverse;
  justify-content: space-between;
  z-index: 2;
  box-shadow:
    -3px 0 colors.$white,
    3px 0 colors.$white;

  button:nth-child(1) {
    margin-top: rem(16) !important;
  }

  @media screen and (min-width: $tabletBreakpoint) {
    flex-direction: row;
    justify-content: center;

    button:nth-child(1) {
      margin-right: rem(16) !important;
      margin-top: 0 !important;
    }
  }
}

.continue-button-content {
  display: flex;
  align-items: center;
}

// Custom Tabs
// -----------

::ng-deep .mdc-tab {
  --border-color: #e0e0e0;

  background: color-mix(in srgb, colors.$secondary-color-light, transparent 80%) !important;
  border-top: 1px solid var(--border-color) !important;
  border-right: 1px solid var(--border-color) !important;
  border-bottom: 1px solid var(--border-color) !important;

  &:hover {
    background: color-mix(in srgb, colors.$black, transparent 88%) !important;
  }

  & .mat-ripple-element {
    background-color: colors.$secondary-color !important;
  }

  // Hack needed to prevent lingering green cast
  & .mdc-tab__ripple::before {
    background-color: white !important;
  }
}

::ng-deep .mdc-tab--active {
  background: white !important;
  border-bottom: none !important;

  &:last-child {
    border-right-color: white !important;
  }

  & .mdc-tab__text-label {
    color: colors.$secondary-color !important;
  }
}

::ng-deep .mdc-tab-indicator__content--underline {
  border: 0 !important;
}
