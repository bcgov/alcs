import { AutoMap } from '@automapper/classes';
import {
  BaseEntity,
  Column,
  Entity,
  JoinColumn,
  ManyToOne,
  OneToOne,
  PrimaryGeneratedColumn,
} from 'typeorm';
import { Document } from '../../document/document.entity';
import { Application } from '../application.entity';

export const DOCUMENT_TYPES = [
  'certificateOfTitle',
  'reviewResolutionDocument',
  'reviewStaffReport',
  'reviewOther',
] as const;
export type DOCUMENT_TYPE =
  | 'certificateOfTitle'
  | 'reviewResolutionDocument'
  | 'reviewStaffReport'
  | 'reviewOther';

@Entity()
export class ApplicationDocument extends BaseEntity {
  constructor(data?: Partial<ApplicationDocument>) {
    super();
    if (data) {
      Object.assign(this, data);
    }
  }

  @AutoMap()
  @PrimaryGeneratedColumn('uuid')
  uuid: string;

  @Column()
  type: string;

  @ManyToOne(() => Application, { nullable: false })
  application: Application;

  @Column({
    comment: 'File Number generated by ALCS system',
  })
  applicationFileNumber: string;

  @OneToOne(() => Document, {
    nullable: false,
    cascade: true,
    onDelete: 'CASCADE',
  })
  @JoinColumn()
  document: Document;
}
