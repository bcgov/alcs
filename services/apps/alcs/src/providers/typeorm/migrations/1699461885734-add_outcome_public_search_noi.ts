import { MigrationInterface, QueryRunner } from "typeorm";

export class addOutcomePublicSearchNoi1699461885734 implements MigrationInterface {
    name = 'addOutcomePublicSearchNoi1699461885734'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE VIEW "alcs"."public_notice_of_intent_submission_search_view" AS SELECT "noi_sub"."uuid" AS "uuid", "noi_sub"."applicant" AS "applicant", "noi"."uuid" AS "notice_of_intent_uuid", "noticeOfIntentType"."audit_deleted_date_at" AS "noticeOfIntentType_audit_deleted_date_at", "noticeOfIntentType"."audit_created_at" AS "noticeOfIntentType_audit_created_at", "noticeOfIntentType"."audit_updated_at" AS "noticeOfIntentType_audit_updated_at", "noticeOfIntentType"."audit_created_by" AS "noticeOfIntentType_audit_created_by", "noticeOfIntentType"."audit_updated_by" AS "noticeOfIntentType_audit_updated_by", "noticeOfIntentType"."label" AS "noticeOfIntentType_label", "noticeOfIntentType"."code" AS "noticeOfIntentType_code", "noticeOfIntentType"."description" AS "noticeOfIntentType_description", "noticeOfIntentType"."short_label" AS "noticeOfIntentType_short_label", "noticeOfIntentType"."background_color" AS "noticeOfIntentType_background_color", "noticeOfIntentType"."text_color" AS "noticeOfIntentType_text_color", "noticeOfIntentType"."html_description" AS "noticeOfIntentType_html_description", "noticeOfIntentType"."portal_label" AS "noticeOfIntentType_portal_label", "localGovernment"."name" AS "local_government_name", "noi_sub"."file_number" AS "file_number", "noi_sub"."local_government_uuid" AS "local_government_uuid", "noi_sub"."type_code" AS "notice_of_intent_type_code", "noi"."date_submitted_to_alc" AS "date_submitted_to_alc", "noi"."decision_date" AS "decision_date", decision_date.outcome AS "outcome", "noi"."region_code" AS "notice_of_intent_region_code", GREATEST(status_link.effective_date,  decision_date.date) AS "last_update", alcs.get_current_status_for_notice_of_intent_submission_by_uuid("noi_sub"."uuid") AS "status" FROM "alcs"."notice_of_intent_submission" "noi_sub" INNER JOIN "alcs"."notice_of_intent" "noi" ON  "noi"."file_number" = "noi_sub"."file_number" AND "noi"."audit_deleted_date_at" IS NULL  INNER JOIN "alcs"."notice_of_intent_type" "noticeOfIntentType" ON  "noi_sub"."type_code" = "noticeOfIntentType"."code" AND "noticeOfIntentType"."audit_deleted_date_at" IS NULL  LEFT JOIN "alcs"."local_government" "localGovernment" ON  "noi_sub"."local_government_uuid" = "localGovernment"."uuid" AND "localGovernment"."audit_deleted_date_at" IS NULL  LEFT JOIN (SELECT MAX("effective_date") AS "effective_date", submission_uuid AS "submission_uuid" FROM "alcs"."notice_of_intent_submission_to_submission_status" "status_link" GROUP BY submission_uuid) "status_link" ON status_link."submission_uuid" = "noi_sub"."uuid"  LEFT JOIN (SELECT MAX("date") AS "date", outcome_code AS "outcome", notice_of_intent_uuid AS "notice_of_intent_uuid" FROM "alcs"."notice_of_intent_decision" "decision_date" WHERE "decision_date"."audit_deleted_date_at" IS NULL GROUP BY notice_of_intent_uuid, outcome) "decision_date" ON decision_date."notice_of_intent_uuid" = "noi"."uuid" WHERE ( "noi_sub"."is_draft" = FALSE AND ("noi"."date_received_all_items" IS NOT NULL AND "noi"."date_received_all_items" <= NOW()) AND alcs.get_current_status_for_notice_of_intent_submission_by_uuid("noi_sub"."uuid")->>'status_type_code' != 'CNCL' ) AND ( "noi_sub"."audit_deleted_date_at" IS NULL )`);
        await queryRunner.query(`INSERT INTO "alcs"."typeorm_metadata"("database", "schema", "table", "type", "name", "value") VALUES (DEFAULT, $1, DEFAULT, $2, $3, $4)`, ["alcs","VIEW","public_notice_of_intent_submission_search_view","SELECT \"noi_sub\".\"uuid\" AS \"uuid\", \"noi_sub\".\"applicant\" AS \"applicant\", \"noi\".\"uuid\" AS \"notice_of_intent_uuid\", \"noticeOfIntentType\".\"audit_deleted_date_at\" AS \"noticeOfIntentType_audit_deleted_date_at\", \"noticeOfIntentType\".\"audit_created_at\" AS \"noticeOfIntentType_audit_created_at\", \"noticeOfIntentType\".\"audit_updated_at\" AS \"noticeOfIntentType_audit_updated_at\", \"noticeOfIntentType\".\"audit_created_by\" AS \"noticeOfIntentType_audit_created_by\", \"noticeOfIntentType\".\"audit_updated_by\" AS \"noticeOfIntentType_audit_updated_by\", \"noticeOfIntentType\".\"label\" AS \"noticeOfIntentType_label\", \"noticeOfIntentType\".\"code\" AS \"noticeOfIntentType_code\", \"noticeOfIntentType\".\"description\" AS \"noticeOfIntentType_description\", \"noticeOfIntentType\".\"short_label\" AS \"noticeOfIntentType_short_label\", \"noticeOfIntentType\".\"background_color\" AS \"noticeOfIntentType_background_color\", \"noticeOfIntentType\".\"text_color\" AS \"noticeOfIntentType_text_color\", \"noticeOfIntentType\".\"html_description\" AS \"noticeOfIntentType_html_description\", \"noticeOfIntentType\".\"portal_label\" AS \"noticeOfIntentType_portal_label\", \"localGovernment\".\"name\" AS \"local_government_name\", \"noi_sub\".\"file_number\" AS \"file_number\", \"noi_sub\".\"local_government_uuid\" AS \"local_government_uuid\", \"noi_sub\".\"type_code\" AS \"notice_of_intent_type_code\", \"noi\".\"date_submitted_to_alc\" AS \"date_submitted_to_alc\", \"noi\".\"decision_date\" AS \"decision_date\", decision_date.outcome AS \"outcome\", \"noi\".\"region_code\" AS \"notice_of_intent_region_code\", GREATEST(status_link.effective_date,  decision_date.date) AS \"last_update\", alcs.get_current_status_for_notice_of_intent_submission_by_uuid(\"noi_sub\".\"uuid\") AS \"status\" FROM \"alcs\".\"notice_of_intent_submission\" \"noi_sub\" INNER JOIN \"alcs\".\"notice_of_intent\" \"noi\" ON  \"noi\".\"file_number\" = \"noi_sub\".\"file_number\" AND \"noi\".\"audit_deleted_date_at\" IS NULL  INNER JOIN \"alcs\".\"notice_of_intent_type\" \"noticeOfIntentType\" ON  \"noi_sub\".\"type_code\" = \"noticeOfIntentType\".\"code\" AND \"noticeOfIntentType\".\"audit_deleted_date_at\" IS NULL  LEFT JOIN \"alcs\".\"local_government\" \"localGovernment\" ON  \"noi_sub\".\"local_government_uuid\" = \"localGovernment\".\"uuid\" AND \"localGovernment\".\"audit_deleted_date_at\" IS NULL  LEFT JOIN (SELECT MAX(\"effective_date\") AS \"effective_date\", submission_uuid AS \"submission_uuid\" FROM \"alcs\".\"notice_of_intent_submission_to_submission_status\" \"status_link\" GROUP BY submission_uuid) \"status_link\" ON status_link.\"submission_uuid\" = \"noi_sub\".\"uuid\"  LEFT JOIN (SELECT MAX(\"date\") AS \"date\", outcome_code AS \"outcome\", notice_of_intent_uuid AS \"notice_of_intent_uuid\" FROM \"alcs\".\"notice_of_intent_decision\" \"decision_date\" WHERE \"decision_date\".\"audit_deleted_date_at\" IS NULL GROUP BY notice_of_intent_uuid, outcome) \"decision_date\" ON decision_date.\"notice_of_intent_uuid\" = \"noi\".\"uuid\" WHERE ( \"noi_sub\".\"is_draft\" = FALSE AND (\"noi\".\"date_received_all_items\" IS NOT NULL AND \"noi\".\"date_received_all_items\" <= NOW()) AND alcs.get_current_status_for_notice_of_intent_submission_by_uuid(\"noi_sub\".\"uuid\")->>'status_type_code' != 'CNCL' ) AND ( \"noi_sub\".\"audit_deleted_date_at\" IS NULL )"]);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`DELETE FROM "alcs"."typeorm_metadata" WHERE "type" = $1 AND "name" = $2 AND "schema" = $3`, ["VIEW","public_notice_of_intent_submission_search_view","alcs"]);
        await queryRunner.query(`DROP VIEW "alcs"."public_notice_of_intent_submission_search_view"`);
    }

}
