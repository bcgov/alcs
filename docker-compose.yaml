version: '3.6'
services:
  ####################### API #######################
  api:
    restart: always
    container_name: alcs_api
    build:
      context: alcs-api
      dockerfile: Dockerfile.local
    ports:
      - 8080:8080
    depends_on:
      - db
      - redis
      # - migrate
    healthcheck:
      test: [ "CMD", "curl", "localhost:8080/" ]
      interval: 5s
      timeout: 5s
      retries: 5

  ##################### Frontend ####################
  frontend:
    container_name: alcs_frontend
    restart: always
    build:
      context: alcs-frontend
    # volumes:
    #   - ./services/core-web/src:/app/src
    ports:
      - 8081:80
    # depends_on:
    #   - api
    # healthcheck:
    #   test: [ "CMD", "curl", "localhost:4200/" ]
    #   interval: 15s
    #   timeout: 5s
    #   retries: 5
    #   start_period: 30s

  ##################### Database ####################
  db:
    image: postgres:14.4-bullseye
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres:/var/lib/postgres

  ###################### Redis ######################
  redis:
    image: "redis:alpine"
    command: redis-server --requirepass redis
    ports:
      - "6379:6379"
    environment:
      - REDIS_REPLICATION_MODE=master

  ################ Database Migrations ##############
  migrate:
    container_name: alcs_migration
    restart: on-failure
    build:
      context: alcs-api
      dockerfile: Dockerfile.migrate
    depends_on:
      db:
        condition: service_healthy
    links:
      - db


volumes:
  postgres:
  redis:

networks: 
  default:
    driver: bridge