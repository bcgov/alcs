version: '3.6'
services:
  ####################### API #######################
  api:
    restart: always
    container_name: alcs_api
    build:
      context: services
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    depends_on:
      - db
      - redis
      - migrate
    healthcheck:
      test: [ "CMD", "curl", "localhost:8080/" ]
      interval: 5s
      timeout: 5s
      retries: 5

  ##################### Frontend ####################
  frontend:
    container_name: alcs_frontend
    restart: always
    build:
      context: alcs-frontend
    ports:
      - 8081:8081
    depends_on:
      - api
    healthcheck:
      test: [ "CMD", "curl", "localhost:8081/" ]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 30s
    environment:
      - API_URL=http://localhost:8080

  ##################### Database ####################
  db:
    image: postgres:14.4-bullseye
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres:/var/lib/postgres
      - ./docker/postgres-schemas.sql:/docker-entrypoint-initdb.d/postgres-schemas.sql




  ###################### Redis ######################
  redis:
    image: "redis:alpine"
    command: redis-server --requirepass redis
    ports:
      - "6379:6379"
    environment:
      - REDIS_REPLICATION_MODE=master

  ################ Database Migrations ##############
  migrate:
    container_name: alcs_migration
    restart: on-failure
    build:
      context: services
      dockerfile: Dockerfile.migrate
    depends_on:
      db:
        condition: service_healthy
    links:
      - db

  ################ S3 Storage ##############
  minio:
    image: minio/minio:latest
    restart: always
    command: "server --console-address :9001 --address :80 /data"
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=miniopassword
      - MINIO_SERVER_URL=http://localhost

    volumes:
      - s3:/data
    ports:
      - "80:80"
      - "9001:9001"


  ################ Portal ############################
  portal-api:
    restart: always
    container_name: alcs_portal_api
    build:
      context: services
      dockerfile: Dockerfile
      args: 
      - NEST_APP=portal
    ports:
      - 8082:8081
    depends_on:
      - db
      - redis
      - migrate
    healthcheck:
      test: [ "CMD", "curl", "localhost:8080/" ]
      interval: 5s
      timeout: 5s
      retries: 5

  ##################### Frontend ####################
  portal-frontend:
    container_name: alcs_portal_frontend
    restart: always
    build:
      context: portal-frontend
    ports:
      - 8083:8081
    depends_on:
      - api
    healthcheck:
      test: [ "CMD", "curl", "localhost:8081/" ]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 30s
    environment:
      - API_URL=http://localhost:8082


  ################ Portal Migrations ##############
  portal-migrate:
    container_name: alcs_portal_migration
    restart: on-failure
    build:
      context: services
      dockerfile: Dockerfile.migrate
      args:
        - NEST_APP=portal
    depends_on:
      db:
        condition: service_healthy
    links:
      - db

volumes:
  postgres:
  redis:
  s3:

networks: 
  default:
    driver: bridge