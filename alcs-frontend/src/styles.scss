// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
@use '@ng-matero/extensions' as mtx;

// Plus imports for other components in your app.
@use 'styles/colors';
@use 'styles/typography';
@use 'styles/toast';
@use 'styles/buttons';
@use 'styles/ngselect';

// ng-select
@use '@ng-select/ng-select/themes/material.theme.css';

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$mat-custom-primary: (
  50: #f3f6eb,
  100: #e0e7cd,
  200: #ccd8ab,
  300: #b7c889,
  400: #a7bc70,
  500: colors.$primary-color,
  600: #90a94f,
  700: #85a046,
  800: #7b973c,
  900: #6a872c,
  A100: #eeffcc,
  A200: #ddff99,
  A400: #cbff66,
  A700: #c3ff4d,
  contrast: (
    50: colors.$dark-contrast-text,
    100: colors.$dark-contrast-text,
    200: colors.$dark-contrast-text,
    300: colors.$dark-contrast-text,
    400: colors.$dark-contrast-text,
    500: colors.$dark-contrast-text,
    600: colors.$dark-contrast-text,
    700: colors.$dark-contrast-text,
    800: colors.$dark-contrast-text,
    900: colors.$dark-contrast-text,
    A100: colors.$dark-contrast-text,
    A200: colors.$dark-contrast-text,
    A400: colors.$dark-contrast-text,
    A700: colors.$dark-contrast-text,
  ),
);

$mat-custom-accent: (
  50: #e2ebf3,
  100: #b6cee1,
  200: #85adce,
  300: #548cba,
  400: #2f73ab,
  500: colors.$accent-color,
  600: #095294,
  700: #07488a,
  800: #053f80,
  900: #032e6e,
  A100: #9dbdff,
  A200: #6a9bff,
  A400: #3778ff,
  A700: #1e67ff,
  contrast: (
    50: colors.$dark-contrast-text,
    100: colors.$dark-contrast-text,
    200: colors.$dark-contrast-text,
    300: colors.$dark-contrast-text,
    400: colors.$light-contrast-text,
    500: colors.$light-contrast-text,
    600: colors.$light-contrast-text,
    700: colors.$light-contrast-text,
    800: colors.$light-contrast-text,
    900: colors.$light-contrast-text,
    A100: colors.$dark-contrast-text,
    A200: colors.$dark-contrast-text,
    A400: colors.$dark-contrast-text,
    A700: colors.$light-contrast-text,
  ),
);

$mat-custom-warn: (
  50: #fae5e6,
  100: #f3bfc1,
  200: #ec9497,
  300: #e4696d,
  400: #de494e,
  500: colors.$error-color,
  600: #d4242a,
  700: #ce1f23,
  800: #c8191d,
  900: #bf0f12,
  A100: #ffecec,
  A200: #ffb9ba,
  A400: #ff8688,
  A700: #ff6d6e,
  contrast: (
    50: colors.$dark-contrast-text,
    100: colors.$dark-contrast-text,
    200: colors.$dark-contrast-text,
    300: colors.$dark-contrast-text,
    400: colors.$dark-contrast-text,
    500: colors.$light-contrast-text,
    600: colors.$light-contrast-text,
    700: colors.$light-contrast-text,
    800: colors.$light-contrast-text,
    900: colors.$light-contrast-text,
    A100: colors.$dark-contrast-text,
    A200: colors.$dark-contrast-text,
    A400: colors.$dark-contrast-text,
    A700: colors.$dark-contrast-text,
  ),
);

$alcs-primary: mat.define-palette($mat-custom-primary);
$alcs-accent: mat.define-palette($mat-custom-accent);

// The warn palette is optional (defaults to red).
$alcs-warn: mat.define-palette($mat-custom-warn);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$alcs-theme: mat.define-light-theme(
  (
    color: (
      primary: $alcs-primary,
      accent: $alcs-accent,
      warn: $alcs-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($alcs-theme);

/* You can add global styles to this file, and also import other style files */

html,
body {
  height: 100%;
  scroll-behavior: smooth;
  overflow: hidden;
}

body {
  margin: 0;
}

.mat-dialog-override {
  mat-dialog-container {
    padding: 32px;

    > :first-child {
      display: flex;
      flex-direction: column;
      height: 100%;
    }
    mat-dialog-content,
    div[mat-dialog-content] {
      flex-grow: 1;
      max-height: unset;
    }
  }
}

.split {
  display: flex;
  align-content: center;
  justify-content: space-between;
  align-items: center;
}

.center {
  display: flex;
  align-content: center;
  justify-content: center;
  align-items: center;
}

.left {
  display: flex;
  align-content: center;
  justify-content: flex-start;
  align-items: center;
}

.right {
  display: flex;
  align-content: center;
  justify-content: flex-end;
  align-items: center;
}

* {
  box-sizing: border-box;
}

.mat-custom-controls {
  color: white;
}

.button-container {
  display: flex;
  justify-content: flex-end;

  button:not(:last-child) {
    margin-right: 24px !important;
  }
}

.text-center {
  text-align: center;
}

a {
  color: colors.$link-color;
  text-decoration: underline;
  cursor: pointer;
}

.mat-radio-label-content {
  width: 100%;
}

.form-warning {
  padding: 16px 8px;
  font-size: 16px;
  background-color: colors.$secondary-color-light;
  border-radius: 8px;
}

mat-button-toggle-group {
  width: 100%;

  mat-button-toggle {
    width: 100%;
  }

  .mat-button-toggle-checked {
    background-color: colors.$primary-color-light;
  }

  .mat-button-toggle-label-content {
    line-height: 33px !important;
  }
}

.date-picker.mat-form-field-appearance-outline .mat-mdc-form-field-flex {
  height: 56px;
}

.mat-calendar-body-cell-content.mat-focus-indicator.mat-calendar-body-selected {
  color: colors.$white;
}

.no-wrap-tooltip {
  word-break: keep-all !important;
  max-width: unset !important;
}

.ng-select.ng-select-disabled .ng-select-container.ng-appearance-outline:hover:after {
  border: solid 1px rgba(0, 0, 0, 0.12);
}

// removes dotted line at the top of disabled select
.ng-select.ng-select-disabled .ng-select-container:after {
  background-image: none;
}

@mixin text-ellipsis($lines: 1) {
  text-overflow: ellipsis;
  overflow: hidden;
  @if ($lines > 1) {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
  } @else {
    white-space: nowrap;
  }
}

.margin-right {
  margin-right: 12px;
}

.mat-mdc-form-field-subscript-wrapper {
  display: none !important;
}
